---
- hosts: zookeepers
  become: true
  tags: zookeeper
  roles:
    - role: humio.java
    - role: humio.zookeeper
      zookeeper_version: 3.4.12
      # zookeeper_url: http://https://mirrors.sonic.net/apache/zookeeper/zookeeper-3.4.12/zookeeper-3.4.12.tar.gz
      zookeeper_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['zookeepers'] %}
       {{- ips.append(dict(id=hostvars[host]['cluster_index'], host=host, ip=hostvars[host]['internal_ip'])) }}
       {%- endfor %}
       {{- ips -}}"
- hosts: zookeepers
  become: true
  tasks:
  - name: start zookeeper if not running
    systemd:
      name: zookeeper
      state: started
- hosts: kafkas
  tags: kafka-disk
  become: true
  tasks:
    - name: create Kafka group
      group: name=kafka  system=yes
    - name: create Kafka user
      user: name=kafka system=yes group=kafka
- hosts: kafkas
  tags: kafka-disk
  become: true
  tasks:
    - name: Check if drives are already mounted
      shell: df | grep "/dev/xvdh" | wc -l
      register: kafka_mount_checked
    - name: parition kafka-disk
      when: kafka_mount_checked.stdout == "0"
      parted:
        device: /dev/xvdh
        number: 1
        flags: [ lvm ]
        label: gpt
        state: present
    - name: format kafka
      when: kafka_mount_checked.stdout == "0"
      filesystem:
        dev: /dev/xvdh
        fstype: ext4
    - name: mount kafka ebs
      when: kafka_mount_checked.stdout == "0"
      mount:
        fstype: ext4
        src: /dev/xvdh
        path: /var/kafka
        state: mounted
    - name: Chown directory
      file:
        path: "/var/kafka"
        state: directory
        owner: "kafka"
        group: "kafka"
        mode: 0755
- hosts: kafkas
  tags: kafka
  become: true
  roles:
    - role: humio.java
    - role: humio.kafka
      kafka_broker_id: "{{ cluster_index }}"
      zookeeper_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['zookeepers'] %}
       {{- ips.append(dict(id=hostvars[host]['cluster_index'], host=host, ip=hostvars[host]['internal_ip'])) }}
       {%- endfor %}
       {{- ips -}}"
      kafka_listeners:
        - host: "{{ internal_ip }}"

- hosts: humios
  tags: disk
  become: true
  tasks:
    - name: create Humio group
      group: name=humio system=yes
    - name: create humio user
      user: name=humio system=yes group=humio
- hosts: humios
  tags: disk
  become: true
  tasks:
    - name: install mdadm
      yum:
        name: mdadm
        state: latest
    - name: Check if drives are already mounted
      shell: df | grep "/dev/md0" | wc -l
      register: md_checked
    - name: check for disks
      when: md_checked.stdout == "0"
      register: md_disks
      shell: find /dev/disk/by-id -iname 'nvme-Amazon_EC2_NVMe_Instance_Storage_*'
    - name: create md
      when: md_checked.stdout == "0"
      shell: mdadm --create --verbose /dev/md0 --force --level=0 --raid-devices={{ md_disks.stdout_lines | length }} {{ md_disks.stdout_lines | join(' ') }}
    - name: parition md
      when: md_checked.stdout == "0"
      parted:
        device: /dev/md0
        number: 1
        flags: [ lvm ]
        label: gpt
        state: present
    - name: format md
      when: md_checked.stdout == "0"
      filesystem:
        dev: /dev/md0
        fstype: ext4
    - name: mount md0
      when: md_checked.stdout == "0"
      mount:
        fstype: ext4
        src: /dev/md0
        path: /var/humio
        state: mounted
    - name: Chown directory
      file:
        path: "/var/humio"
        state: directory
        owner: "humio"
        group: "humio"
        mode: 0755
- hosts: humios
  tags: humio
  become: true
  serial: 1
  roles:
    - role: humio.java
    - role: humio.server
      humio_version: "1.14.1"
      humio_host_id: "{{ cluster_index }}"
      zookeeper_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['zookeepers'] %}
       {{- ips.append(dict(id=hostvars[host]['cluster_index'], host=host, ip=hostvars[host]['internal_ip'])) }}
       {%- endfor %}
       {{- ips -}}"
      kafka_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['kafkas'] %}
       {{- ips.append(dict(id=hostvars[host]['cluster_index'], host=host, ip=hostvars[host]['internal_ip'])) }}
       {%- endfor %}
       {{- ips -}}"
      humio_java_opts_Xms: "{{ (ansible_memtotal_mb|int * 0.6)|int }}M" 
      humio_java_opts_Xmx: "{{ (ansible_memtotal_mb|int * 0.6)|int }}M" 
      humio_java_opts_MaxDirectMemorySize: "{{ (ansible_memtotal_mb|int * 0.12)|int }}M"  
      humio_config:
##        all: "FILE=humio_config"
        "0": "EXTERNAL_URL=http://{{ internal_ip }}:8080"
